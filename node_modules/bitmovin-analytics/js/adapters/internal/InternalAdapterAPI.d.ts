import { Analytics } from '../../core/Analytics';
import VideoCompletionTracker from '../../core/VideoCompletionTracker';
import { Feature } from '../../features/Feature';
import { FeatureConfig } from '../../features/FeatureConfig';
import { CustomDataValues } from '../../types/CustomDataValues';
import { DownloadSpeedInfo } from '../../types/DownloadSpeedInfo';
import { DrmPerformanceInfo } from '../../types/DrmPerformanceInfo';
import { FeatureConfigContainer } from '../../types/FeatureConfigContainer';
import { PlaybackInfo } from '../../types/PlaybackInfo';
import { SegmentInfo } from '../../types/SegmentInfo';
import { StateMachineCallbacks } from '../../types/StateMachineCallbacks';
import { AdModuleAPI } from './ads/AdModuleAPI';
import { DeferredLicenseLoadingAdapterAPI } from './DeferredLicenseLoadingAdapterAPI';
export interface InternalAdapterAPI extends DeferredLicenseLoadingAdapterAPI {
    readonly downloadSpeedInfo: DownloadSpeedInfo;
    readonly segments: SegmentInfo[];
    readonly stateMachineCallbacks: StateMachineCallbacks;
    readonly adModule?: AdModuleAPI;
    readonly videoCompletionTracker?: VideoCompletionTracker;
    isQualityChangeEventEnabled(): boolean;
    increaseQualityChangeCount(): void;
    resetQualityChangeCount(): void;
    resetSourceRelatedState(): void;
    getPlayerVersion(): string;
    getPlayerName(): string;
    getPlayerTech(): string;
    getAutoPlay(): boolean;
    getDrmPerformanceInfo(): DrmPerformanceInfo | undefined;
    initialize(analytics: Analytics): Array<Feature<FeatureConfigContainer, FeatureConfig>>;
    getCurrentPlaybackInfo(): PlaybackInfo;
    sourceChange(config: any, timestamp: number): any;
    clearValues(): void;
    onError?(): void;
    setCustomData(values: CustomDataValues): void;
}
