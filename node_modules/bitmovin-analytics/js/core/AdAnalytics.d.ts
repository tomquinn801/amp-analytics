import { AdBreakEvent, AdClickedEvent, AdEvent, AdLinearityChangedEvent, AdManifestLoadedEvent, AdQuartileEvent, ErrorEvent } from 'bitmovin-player';
import { AdModuleAPI } from '../adapters/internal/ads/AdModuleAPI';
import { AdAnalyticsSample } from '../types/AdAnalyticsSample';
import { Sample } from '../types/Sample';
import { Analytics } from './Analytics';
export declare class AdAnalytics {
    static readonly MODULE_NAME = "ads";
    private static readonly TIMEOUT_CURRENT_TIME_INTERVAL;
    private onBeforeUnLoadEvent;
    private analytics;
    private adapter;
    private viewportTracker;
    private activeAdBreakSample?;
    private activeAdSample?;
    private adManifestLoadedEvents;
    private adStartupTimestamp?;
    private beginPlayingTimestamp?;
    private enterViewportTimestamp?;
    private isPlaying;
    private currentTime?;
    private currentTimeInterval?;
    private adPodPosition;
    constructor(analytics: Analytics, adapter: AdModuleAPI);
    onIntersectionChanged(): void;
    isContainerInViewport(): boolean;
    onPlay(): void;
    onPause(): void;
    onAdManifestLoaded(event: AdManifestLoadedEvent): void;
    onAdBreakStarted(event: AdBreakEvent): void;
    onAdBreakFinished(event: AdBreakEvent): void;
    onAdStarted(event: AdEvent): void;
    onAdFinished(event: AdEvent): void;
    onAdSkipped(event: AdEvent): void;
    onAdError(event: ErrorEvent): void;
    onAdLinearityChanged(event: AdLinearityChangedEvent): void;
    onAdClicked(event: AdClickedEvent): void;
    onAdQuartile(event: AdQuartileEvent): void;
    onBeforeUnload(): void;
    createNewAdAnalyticsSample(analyticsSample: Sample): AdAnalyticsSample;
    private getAdManifestLoadedEvent;
    private sendAnalyticsRequest;
    private updatePlayingTime;
    private startAd;
    private completeAd;
    private resetActiveAd;
}
