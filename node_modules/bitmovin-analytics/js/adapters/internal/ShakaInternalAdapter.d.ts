import { Analytics } from '../../core/Analytics';
import { Player } from '../../enums/Player';
import { Feature } from '../../features/Feature';
import { FeatureConfig } from '../../features/FeatureConfig';
import { AnalyticsStateMachineOptions } from '../../types/AnalyticsStateMachineOptions';
import { FeatureConfigContainer } from '../../types/FeatureConfigContainer';
import { QualityLevelInfo } from '../../types/QualityLevelInfo';
import { HTML5InternalAdapter } from './HTML5InternalAdapter';
import { InternalAdapterAPI } from './InternalAdapterAPI';
export declare class ShakaInternalAdapter extends HTML5InternalAdapter implements InternalAdapterAPI {
    private player;
    constructor(player: any, opts?: AnalyticsStateMachineOptions);
    /**
     * @override
     */
    initialize(analytics: Analytics): Array<Feature<FeatureConfigContainer, FeatureConfig>>;
    getPlayerName: () => Player;
    getPlayerVersion: () => any;
    isLive: () => any;
    /**
     * @override
     */
    getMIMEType(): string;
    /**
     * @override
     */
    getStreamURL(): any;
    /**
     * Implemented by sub-class to deliver current quality-level info
     * specific to media-engine.
     * @override
     * @returns {QualityLevelInfo}
     */
    getCurrentQualityLevelInfo(): QualityLevelInfo | null;
}
