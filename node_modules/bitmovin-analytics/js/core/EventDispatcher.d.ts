export interface Subscribable<TArgs> {
    subscribe(callback: EventHandler<TArgs>): () => void;
    unsubscribe(callback: EventHandler<TArgs>): any;
}
declare type EventHandler<TArgs> = (args: TArgs) => void;
export declare class EventDispatcher<TArgs> implements Subscribable<TArgs> {
    private callbacks;
    subscribe(callback: EventHandler<TArgs>): () => void;
    dispatch(args: TArgs): void;
    unsubscribe(callback: EventHandler<TArgs>): void;
    get subscriberCount(): number;
}
export {};
