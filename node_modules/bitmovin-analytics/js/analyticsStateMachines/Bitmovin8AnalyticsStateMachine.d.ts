import * as StateMachine from 'javascript-state-machine';
import { EventMap } from '../enums/Event';
import { AnalyticsStateMachineOptions } from '../types/AnalyticsStateMachineOptions';
import { NoExtraProperties } from '../types/NoExtraProperties';
import { StateMachineCallbacks } from '../types/StateMachineCallbacks';
import { EventDebugging } from '../utils/EventDebugging';
import { AnalyticsStateMachine } from './AnalyticsStateMachine';
export declare class Bitmovin8AnalyticsStateMachine extends AnalyticsStateMachine {
    private debuggingStates;
    private enabledDebugging;
    private seekTimestamp;
    private seekedTimestamp;
    private seekStarted;
    private seekEnded;
    constructor(stateMachineCallbacks: StateMachineCallbacks, opts: AnalyticsStateMachineOptions);
    getAllStatesBut(states: string[]): any[];
    getAllStates(): any[];
    sourceChange: (config: any, timestamp: number, currentTime?: number | undefined) => void;
    createStateMachine(opts: AnalyticsStateMachineOptions): StateMachine.StateMachine;
    callEvent<StatemachineEvent extends keyof EventMap, EventData extends EventMap[StatemachineEvent]>(eventType: StatemachineEvent, eventObject: NoExtraProperties<EventMap[StatemachineEvent], EventData>, timestamp: number): void;
    addStatesToLog(event: string | undefined, from: string | undefined, to: string | undefined, timestamp: number, eventObject: any): void;
    getStates(): EventDebugging[];
    setEnabledDebugging(enabled: boolean): void;
}
