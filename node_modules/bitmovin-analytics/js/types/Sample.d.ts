import { CustomDataValues } from './CustomDataValues';
import { DownloadSpeedInfo } from './DownloadSpeedInfo';
export interface Sample extends CustomDataValues {
    platform: string;
    sequenceNumber?: number;
    domain?: any;
    path?: string;
    language?: string;
    userAgent?: string;
    screenWidth?: number;
    screenHeight?: number;
    isLive?: boolean;
    isCasting?: boolean;
    castTech?: string;
    videoDuration?: number;
    size?: string;
    time?: number;
    videoWindowWidth?: number;
    videoWindowHeight?: number;
    droppedFrames?: number;
    played?: number;
    buffered?: number;
    paused?: number;
    ad?: number;
    seeked?: number;
    videoPlaybackWidth?: number;
    videoPlaybackHeight?: number;
    videoBitrate?: number;
    audioBitrate?: number;
    videoTimeStart?: number;
    videoTimeEnd?: number;
    videoStartupTime?: number;
    duration?: number;
    startupTime?: number;
    analyticsVersion?: any;
    playerStartupTime: number;
    pageLoadType: number;
    streamFormat?: string;
    isMuted?: boolean;
    progUrl?: string;
    m3u8Url?: string;
    mpdUrl?: string;
    playerTech?: string;
    version?: string;
    player?: any;
    state?: string;
    impressionId?: string;
    userId?: string;
    errorMessage?: any;
    errorCode?: any;
    errorData?: string;
    videoStartFailed?: boolean;
    videoStartFailedReason?: string;
    autoplay?: any;
    pageLoadTime: number;
    key?: string;
    playerKey?: any;
    cdnProvider?: any;
    videoId?: string;
    videoTitle?: string;
    customUserId?: string;
    drmType?: string;
    drmLoadTime?: number;
    subtitleEnabled?: boolean;
    subtitleLanguage?: string;
    downloadSpeedInfo?: DownloadSpeedInfo;
    errorSegments?: any[];
    audioCodec?: string;
    videoCodec?: string;
    supportedVideoCodecs?: string[];
    audioLanguage?: string;
    completed?: number;
    completedTotal?: number;
}
